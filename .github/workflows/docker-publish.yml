name: Docker Publish (DockerHub + GHCR)

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
    tags: [ "v*.*.*" ]

env:
  DOCKERHUB_REGISTRY: docker.io
  GHCR_REGISTRY: ghcr.io
  DOCKERHUB_USERNAME: ubiquitycluster
  DOCKERHUB_PAT: ${{ secrets.DOCKER_PAT }}

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      base: ${{ steps.filter.outputs.base }}
      controller: ${{ steps.filter.outputs.controller }}
      database: ${{ steps.filter.outputs.database }}
      worker: ${{ steps.filter.outputs.worker }}
      login: ${{ steps.filter.outputs.login }}
      adcli: ${{ steps.filter.outputs.adcli }}
    steps:
      - uses: actions/checkout@v4

      - name: Filter changes
        id: filter
        uses: dorny/paths-filter@v3
        with:
          filters: |
            base:
              - Dockerfile
              - files/entrypoint.sh
            controller:
              - Dockerfile-controller
            database:
              - Dockerfile-database
            worker:
              - Dockerfile-worker
              - files/entrypoint.sh
            login:
              - Dockerfile-login
            adcli:
              - Dockerfile-adcli

  build-and-push:
    runs-on: ubuntu-latest
    needs: detect-changes
    if: |
      needs.detect-changes.outputs.base == 'true' ||
      needs.detect-changes.outputs.controller == 'true' ||
      needs.detect-changes.outputs.database == 'true' ||
      needs.detect-changes.outputs.worker == 'true' ||
      needs.detect-changes.outputs.login == 'true' ||
      needs.detect-changes.outputs.adcli == 'true'
    strategy:
      fail-fast: false
      matrix:
        image:
          - base
          - controller
          - database
          - worker
          - login
          - adcli
        include:
          - image: base
            file: Dockerfile
            context: .
            tag: slurm-base
            changed: ${{ needs.detect-changes.outputs.base }}
          - image: controller
            file: Dockerfile-controller
            context: .
            tag: slurm-controller
            changed: ${{ needs.detect-changes.outputs.controller }}
          - image: database
            file: Dockerfile-database
            context: .
            tag: slurm-database
            changed: ${{ needs.detect-changes.outputs.database }}
          - image: worker
            file: Dockerfile-worker
            context: .
            tag: slurm-worker
            changed: ${{ needs.detect-changes.outputs.worker }}
          - image: login
            file: Dockerfile-login
            context: .
            tag: slurm-login
            changed: ${{ needs.detect-changes.outputs.login }}
          - image: adcli
            file: Dockerfile-adcli
            context: .
            tag: slurm-adcli
            changed: ${{ needs.detect-changes.outputs.adcli }}
    steps:
      - name: Skip if image did not change
        if: matrix.changed != 'true'
        run: echo "No changes for ${matrix.image}, skipping."

      - name: Checkout repository
        if: matrix.changed == 'true'
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        if: matrix.changed == 'true'
        uses: docker/setup-buildx-action@v3

      - name: Prune previous Docker layers
        if: matrix.changed == 'true'
        run: |
          docker builder prune -f
          docker system prune -a -f --volumes

      - name: Log in to DockerHub
        if: matrix.changed == 'true'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.DOCKERHUB_REGISTRY }}
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ env.DOCKERHUB_PAT }}

      - name: Log in to GHCR
        if: matrix.changed == 'true'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.GHCR_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push ${{ matrix.tag }}
        if: matrix.changed == 'true'
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.context }}
          file: ${{ matrix.file }}
          push: true
          platforms: linux/amd64
          tags: |
            ${{ env.DOCKERHUB_REGISTRY }}/${{ env.DOCKERHUB_USERNAME }}/${{ matrix.tag }}:latest
            ${{ env.GHCR_REGISTRY }}/${{ github.repository }}/${{ matrix.tag }}:latest
          cache-from: type=gha

